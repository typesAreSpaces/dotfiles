;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"SVG.py

Simple generation of SVG-format vector graphics files

D. Eppstein, November 2011.
\"\"\"" code nil nil [1 98])
            ("_coord" function
               (:documentation "String representation for coordinate"
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [111 112]))                  )
                nil [100 210])
            ("SVG" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"Create a new SVG object, to be written to the given stream.
        If standalone is True or omitted, the SVG object becomes a whole
        XML file; otherwise, it becomes an XML object within a larger XML
        file. If the prefix is nonempty, it is used to distinguish svg tags
        from other tags; a reasonable choice for the prefix value would be
        \"s\" or \"svg\". If the indentation is nonzero, it gives a number of
        spaces by which every line of the file is indented.
        
        The bbox argument should be a complex number, the farthest visible
        point from the origin in the positive quadrant. The bounding box
        will become the rectangle between the origin and that point.
        All other methods that specify points should do so using
        complex number coordinates.\"\"\"" code nil (reparse-symbol indented_block_body) [328 1152])
                            ("self" variable nil (reparse-symbol indented_block_body) [1161 1181])
                            ("if" code nil (reparse-symbol indented_block_body) [1190 1283])
                            ("if" code nil (reparse-symbol indented_block_body) [1291 1468])
                            ("self" variable nil (reparse-symbol indented_block_body) [1476 1506])
                            ("self" variable nil (reparse-symbol indented_block_body) [1515 1531])
                            ("br" variable nil (reparse-symbol indented_block_body) [1540 1562])
                            ("bi" variable nil (reparse-symbol indented_block_body) [1571 1593])
                            ("self" code nil (reparse-symbol indented_block_body) [1602 1741]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [239 243])
                            ("bbox" variable nil (reparse-symbol function_parameters) [245 249])
                            ("stream" variable nil (reparse-symbol function_parameters) [251 257])
                            ("standalone" variable nil (reparse-symbol function_parameters) [274 284])
                            ("prefix" variable nil (reparse-symbol function_parameters) [291 297])
                            ("indentation" variable nil (reparse-symbol function_parameters) [304 315]))                          
                        :documentation "Create a new SVG object, to be written to the given stream.
        If standalone is True or omitted, the SVG object becomes a whole
        XML file; otherwise, it becomes an XML object within a larger XML
        file. If the prefix is nonempty, it is used to distinguish svg tags
        from other tags; a reasonable choice for the prefix value would be
        \"s\" or \"svg\". If the indentation is nonzero, it gives a number of
        spaces by which every line of the file is indented.
        
        The bbox argument should be a complex number, the farthest visible
        point from the origin in the positive quadrant. The bounding box
        will become the rectangle between the origin and that point.
        All other methods that specify points should do so using
        complex number coordinates."
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [226 1742])
                    ("close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1757 1761]))                          
                        :documentation "Output the end of an SVG file.")
                        (reparse-symbol indented_block_body) [1747 1916])
                    ("element" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1933 1937])
                            ("e" variable nil (reparse-symbol function_parameters) [1939 1940])
                            ("delta" variable nil (reparse-symbol function_parameters) [1942 1947])
                            ("unspaced" variable nil (reparse-symbol function_parameters) [1951 1959])
                            ("style" variable nil (reparse-symbol function_parameters) [1967 1972])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [1977 1988]))                          
                        :documentation "Output an SVG element.
        The delta argument distinguishes between XML tags that
        open a nested section of the XML file (delta=+1), XML tags
        that close the same section (delta=-1), and XML tags that
        stand alone without anything nested inside them (delta=0).
        Every call with delta=+1 must be matched by a call with delta=-1.
        If the style argument is nonempty, it should be a dictionary
        of style parameters, included within the object; these
        may also be passed as keyword arguments to element.
        If the same keyword is present both in style and as a keyword
        argument, the keyword argument takes priority.")
                        (reparse-symbol indented_block_body) [1921 3591])
                    ("group" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3606 3610])
                            ("style" variable nil (reparse-symbol function_parameters) [3611 3616])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [3620 3631]))                          
                        :documentation "Start a group of objects, all with the same style")
                        (reparse-symbol indented_block_body) [3596 3754])
                    ("ungroup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3771 3775]))                          
                        :documentation "End a group of objects")
                        (reparse-symbol indented_block_body) [3759 3845])
                    ("circle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3861 3865])
                            ("center" variable nil (reparse-symbol function_parameters) [3867 3873])
                            ("radius" variable nil (reparse-symbol function_parameters) [3875 3881])
                            ("style" variable nil (reparse-symbol function_parameters) [3883 3888])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [3893 3904]))                          
                        :documentation "Circle with given center and radius")
                        (reparse-symbol indented_block_body) [3850 4126])
                    ("rectangle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4145 4149])
                            ("p" variable nil (reparse-symbol function_parameters) [4151 4152])
                            ("q" variable nil (reparse-symbol function_parameters) [4154 4155])
                            ("style" variable nil (reparse-symbol function_parameters) [4157 4162])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [4167 4178]))                          
                        :documentation "Rectangle with corners at points p and q")
                        (reparse-symbol indented_block_body) [4131 4539])
                    ("polygon" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4556 4560])
                            ("points" variable nil (reparse-symbol function_parameters) [4562 4568])
                            ("style" variable nil (reparse-symbol function_parameters) [4570 4575])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [4580 4591]))                          
                        :documentation "Polygon with corners at the given set of points")
                        (reparse-symbol indented_block_body) [4544 4839])
                    ("polyline" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4857 4861])
                            ("points" variable nil (reparse-symbol function_parameters) [4863 4869])
                            ("style" variable nil (reparse-symbol function_parameters) [4871 4876])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [4881 4892]))                          
                        :documentation "Polyline with corners at the given set of points")
                        (reparse-symbol indented_block_body) [4844 5142])
                    ("segment" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5159 5163])
                            ("p" variable nil (reparse-symbol function_parameters) [5165 5166])
                            ("q" variable nil (reparse-symbol function_parameters) [5168 5169])
                            ("style" variable nil (reparse-symbol function_parameters) [5171 5176])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [5181 5192]))                          
                        :documentation "Line segment from p to q")
                        (reparse-symbol indented_block_body) [5147 5432])
                    ("arc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5445 5449])
                            ("p" variable nil (reparse-symbol function_parameters) [5451 5452])
                            ("q" variable nil (reparse-symbol function_parameters) [5454 5455])
                            ("r" variable nil (reparse-symbol function_parameters) [5457 5458])
                            ("large" variable nil (reparse-symbol function_parameters) [5460 5465])
                            ("style" variable nil (reparse-symbol function_parameters) [5473 5478])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [5483 5494]))                          
                        :documentation "Circular arc from p to q with radius r.
        If the large flag is set true, the arc will cover more than
        half of a circle. The SVG \"sweep-flag\" is not provided;
        instead, to achieve the same effect, swap p and q.")
                        (reparse-symbol indented_block_body) [5437 6055])
                    ("text" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6069 6073])
                            ("label" variable nil (reparse-symbol function_parameters) [6075 6080])
                            ("location" variable nil (reparse-symbol function_parameters) [6082 6090])
                            ("style" variable nil (reparse-symbol function_parameters) [6092 6097])
                            ("morestyle" variable nil (reparse-symbol function_parameters) [6102 6113]))                          
                        :documentation "Text label at the given location.
        Caller is responsible for making the label xml-safe.")
                        (reparse-symbol indented_block_body) [6060 6477]))                  
                :type "class")
                nil [211 6477])
            ("colors" type
               (:members 
                  ( ("none" variable nil (reparse-symbol indented_block_body) [6591 6604])
                    ("white" variable nil (reparse-symbol indented_block_body) [6609 6626])
                    ("black" variable nil (reparse-symbol indented_block_body) [6631 6648])
                    ("red" variable nil (reparse-symbol indented_block_body) [6653 6668])
                    ("blue" variable nil (reparse-symbol indented_block_body) [6673 6689])
                    ("green" variable nil (reparse-symbol indented_block_body) [6694 6711])
                    ("yellow" variable nil (reparse-symbol indented_block_body) [6716 6734])
                    ("magenta" variable nil (reparse-symbol indented_block_body) [6739 6758]))                  
                :type "class")
                nil [6573 6759]))          
      :file "SVG.py"
      :pointmax 6759
      :fsize 6758
      :lastmodtime '(23904 52006 501234 505000)
      :unmatched-syntax nil))
  :file "!home!jose!Downloads!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
