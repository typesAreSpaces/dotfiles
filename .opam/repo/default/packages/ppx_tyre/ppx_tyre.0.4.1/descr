PPX syntax for tyre regular expressions and routes

This PPX compiles

    [%tyre {|re|}]

into `'a Tyre.t` and

    function%tyre
    | {|re1|} as x1 -> e1
    ...
    | {|reN|} as x2 -> eN

into `'a Type.route`, where `re`, `re1`, ... are regular expressions
expressed in a slightly extended subset of PCRE.  The interpretations are:

- `re?` extracts an option of what `re` extracts.
- `re+`, `re*`, `re{n,m}` extracts a list of what `re` extracts.
- `(?@qname)` refers to any identifier bound to a typed regular expression
  of type `'a Tyre.t`.
- One or more `(?<v>re)` at the top level can be used to bind variables
  instead of `as ...`.
- One or more `(?<v>re)` in a sequence extracts an object where each method
  `v` is bound to what `re` extracts.
- An alternative with one `(?<v>re)` per branch extracts a polymorphic
  variant where each constructor `` `v`` receives what `re` extracts as its
  argument.
- `(?&v:qname)` is a shortcut for `(?<v>(?&qname))`.
